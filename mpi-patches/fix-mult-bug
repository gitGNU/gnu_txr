Index: mpi-1.8.6/mpi.c
===================================================================
--- mpi-1.8.6.orig/mpi.c	2012-03-04 11:49:39.720925007 -0800
+++ mpi-1.8.6/mpi.c	2012-03-04 11:49:47.661389007 -0800
@@ -3268,7 +3268,7 @@
     unless absolutely necessary.
    */
   max = USED(a);
-  w = dp[max - 1] * d;
+  w = dp[max - 1] * (mp_word) d;
   if(CARRYOUT(w) != 0) {
     if((res = s_mp_pad(a, max + 1)) != MP_OKAY)
       return res;
@@ -3276,7 +3276,7 @@
   }
 
   for(ix = 0; ix < max; ix++) {
-    w = (dp[ix] * d) + k;
+    w = (dp[ix] * (mp_word) d) + k;
     dp[ix] = ACCUM(w);
     k = CARRYOUT(w);
   }
@@ -3493,7 +3493,7 @@
     pa = DIGITS(a);
     for(jx = 0; jx < ua; ++jx, ++pa) {
       pt = pbt + ix + jx;
-      w = *pb * *pa + k + *pt;
+      w = *pb * (mp_word) *pa + k + *pt;
       *pt = ACCUM(w);
       k = CARRYOUT(w);
     }
@@ -3575,7 +3575,7 @@
     if(*pa1 == 0)
       continue;
 
-    w = DIGIT(&tmp, ix + ix) + (*pa1 * *pa1);
+    w = DIGIT(&tmp, ix + ix) + (*pa1 * (mp_word) *pa1);
 
     pbt[ix + ix] = ACCUM(w);
     k = CARRYOUT(w);
@@ -3597,7 +3597,7 @@
       pt = pbt + ix + jx;
 
       /* Compute the multiplicative step */
-      w = *pa1 * *pa2;
+      w = *pa1 * (mp_word) *pa2;
 
       /* If w is more than half MP_WORD_MAX, the doubling will
 	 overflow, and we need to record a carry out into the next
@@ -3641,7 +3641,7 @@
      */
     kx = 1;
     while(k) {
-      k = pbt[ix + jx + kx] + 1;
+      k = (mp_word) pbt[ix + jx + kx] + 1;
       pbt[ix + jx + kx] = ACCUM(k);
       k = CARRYOUT(k);
       ++kx;
